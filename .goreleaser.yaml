# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: "movies"

before:
  hooks:
    - go mod tidy
    - make clean

builds:
  - id: movies
    main: ./cmd/movies/
    binary: movies
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
    ldflags:
      - "-s"
      - "-w"
      - "-X main.appVersion={{ .Version }}"
      - "-X main.osArch={{ .Os }}/{{ .Arch }}"

archives:
  - id: movies
    formats:
      - tar.gz
    ids:
      - movies
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}

nfpms:
  - id: movies
    ids:
      - movies
    package_name: movies
    file_name_template: "{{ .ConventionalFileName }}"
    vendor: Fabio Ribeiro
    homepage:  https://fabioribeiro.dev
    maintainer: Fabio Ribeiro <me@fabioribeiro.dev>
    description: Manages movie collection throught API
    license: MIT
    formats:
      - deb
    contents:
      - src: "env/debian/movies.service"
        dst: "/lib/systemd/system/movies.service"
      - src: "env/debian/movies.socket"
        dst: "/lib/systemd/system/movies.socket"
      - src: "env/debian/movies.conf"
        dst: "/etc/default/movies"
        type: config
    scripts:
      preremove: "env/debian/pre-remove.sh"
      postinstall: "env/debian/post-install.sh"
      postremove: "env/debian/post-remove.sh"

checksum:
  name_template: '{{ .ProjectName }}_checksums.txt'

changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
